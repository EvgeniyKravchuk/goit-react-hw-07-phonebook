{"version":3,"sources":["API/axios-default-options.js","components/General.styled.jsx","components/contactForm/ContactForm.styled.jsx","API/api-operations.js","redux/contacts/contacts-operations.js","components/contactForm/ContactForm.jsx","components/contactsList/ContaxList.styled.jsx","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","headers","post","Wrapper","styled","div","Title","h1","h2","Form","form","Label","label","props","filter","Input","input","Button","button","fetchContacts","a","get","data","contact","id","delete","response","dispatchFetchContacts","createAsyncThunk","_","rejectWithValue","contacts","message","ContactForm","useState","name","setName","number","setNumber","useSelector","state","items","dispatch","useDispatch","clear","onSubmit","evt","preventDefault","uuidv4","notUniqueName","some","item","notUniqueNumber","alert","postContact","type","pattern","title","required","placeholder","onChange","target","value","List","ul","Item","li","ContactsList","filterValue","length","toLowerCase","includes","filterElements","useEffect","map","onClick","deleteContact","currentTarget","Filter","changeFilter","App","createReducer","fulfilled","payload","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e76250f1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 1400px;\n  min-height: 100vh;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: grey;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nexport const Undertitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600px;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  text-align: center;\n\n  padding: 20px;\n\n  border-bottom: 5px solid black;\n`;\n\nexport const Label = styled.label`\n  font-size: 30px;\n  font-weight: 600;\n\n  display: flex;\n  justify-content: ${(props) => (props.filter ? \"center\" : \"space-between\")};\n  align-items: ${(props) => (props.filter ? \"center\" : \"baseline\")};\n\n  flex-direction: ${(props) => (props.filter ? \"column\" : \"row\")};\n\n  transition-duration: 500ms;\n\n  cursor: pointer;\n\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 300px;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  outline: none;\n\n  border: none;\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  padding-left: 10px;\n  margin-left: 20px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n    border: 2px solid orange;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 20px;\n  font-weight: 500;\n\n  width: 150px;\n  height: 30px;\n\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    background-color: orange;\n  }\n`;\n","import axios from \"axios\";\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function postContact(contact) {\n  const { data } = await axios.post(\"/contacts\", contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const response = await axios.delete(\"/contacts/\" + id);\n  return response;\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchContacts } from \"../../API/api-operations\";\n\nexport const dispatchFetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// export const dispatchFetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     const contacts = await fetchContacts();\n\n//     dispatch(fetchContactsSuccess(contacts));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error.message));\n//   }\n// };\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Input, Label, Button, Form } from \"./ContactForm.styled\";\nimport { dispatchFetchContacts } from \"../../redux/contacts/contacts-operations\";\nimport { postContact } from \"../../API/api-operations\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector((state) => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const id = uuidv4();\n    const contact = { id, name, number };\n    const notUniqueName = contacts.some((item) => item.name === name);\n    const notUniqueNumber = contacts.some((item) => item.number === number);\n\n    if (notUniqueName) {\n      return alert(name + \" уже добавлен(а) в список контактов\");\n    } else if (notUniqueNumber) {\n      return alert(\"Уже добавлен контакт с номером: \" + number);\n    } else if (name === \"\" || number === \"\") {\n      return alert(\"Пожалуйста, введите Имя и номер.\");\n    } else {\n      postContact(contact);\n      dispatch(dispatchFetchContacts());\n\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Имя:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Введите имя\"\n          onChange={(evt) => {\n            setName(evt.target.value);\n          }}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Номер:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Введите номер телефона\"\n          onChange={(evt) => {\n            setNumber(evt.target.value);\n          }}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\">Подтвердить</Button>\n    </Form>\n  );\n}\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func.isRequired,\n//   contacts: PropTypes.array.isRequired,\n// };\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n\n  width: 1000px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  margin: 0px;\n  margin-top: 20px;\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  font-size: 26px;\n  font-weight: 600;\n\n  width: 400px;\n  height: 50px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border: 1px solid black;\n\n  background-color: #4b4b4b;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: 1px solid black;\n  border-radius: 50%;\n\n  padding: 5px;\n\n  background-color: #4b4b4b;\n\n  cursor: pointer;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    border: 1px solid orange;\n    transform: rotate(360deg) scale(1.15);\n\n    svg {\n      fill: orange;\n    }\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n\n    transition-duration: 500ms;\n  }\n`;\n","import { FaRegTrashAlt } from \"react-icons/fa\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { dispatchFetchContacts } from \"../../redux/contacts/contacts-operations\";\nimport { deleteContact } from \"../../API/api-operations\";\nimport { List, Item, Button } from \"./ContaxList.styled\";\n\nexport default function ContactsList() {\n  const contacts = useSelector((state) =>\n    filterElements(state.contacts.items, state.contacts.filter)\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(dispatchFetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function filterElements(contacts, filterValue) {\n    if (contacts.length === 0) {\n      return [];\n    }\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filterValue.toLowerCase());\n    });\n  }\n\n  return (\n    <List>\n      {contacts.map((contact) => {\n        return (\n          <Item key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button\n              id={contact.id}\n              onClick={(evt) => {\n                deleteContact(evt.currentTarget.id);\n                dispatch(dispatchFetchContacts());\n              }}\n            >\n              <FaRegTrashAlt />\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Label } from \"../contactForm/ContactForm.styled\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\n\nexport default function Filter() {\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <Label filter=\"true\">\n      Введите имя для поиска в списке контактов\n      <Input\n        name=\"filter\"\n        onChange={(evt) => dispatch(changeFilter(evt.target.value))}\n        value={filter}\n      />\n    </Label>\n  );\n}\n","import \"./App.module.css\";\n// import { useEffect } from \"react\";\nimport { Wrapper, Title } from \"./components/General.styled\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactsList from \"./components/contactsList/ContactsList\";\nimport Filter from \"./components/filter/Filter\";\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Title>Телефонная книга:</Title>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </Wrapper>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./contacts-actions\";\nimport { dispatchFetchContacts } from \"./contacts-operations\";\n\nconst items = createReducer([], {\n  [dispatchFetchContacts.fulfilled]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [dispatchFetchContacts.pending]: () => true,\n  [dispatchFetchContacts.fulfilled]: () => false,\n  [dispatchFetchContacts.rejected]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [dispatchFetchContacts.rejected]: (_, { payload }) => payload,\n  [dispatchFetchContacts.pending]: null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reducers\";\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./API/axios-default-options\";\nimport App from \"./App\";\nimport { store } from \"./redux/store.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}