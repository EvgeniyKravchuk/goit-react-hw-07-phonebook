{"version":3,"sources":["API/axios-default-options.js","components/General.styled.jsx","components/contactForm/ContactForm.styled.jsx","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/contactForm/ContactForm.jsx","components/contactsList/ContaxList.styled.jsx","components/contactsList/ContactsList.jsx","redux/contacts/contacts-actions.js","components/filter/Filter.jsx","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","headers","post","Wrapper","styled","div","Title","h1","h2","Form","form","Label","label","props","filter","Input","input","Button","button","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","message","addContact","contact","console","log","deleteContact","id","contacts","delete","item","getContacts","state","items","getFilter","getIsLoading","isLoading","getFilteredContacts","createSelector","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","clear","onSubmit","evt","preventDefault","uuidv4","notUniqueName","some","notUniqueNumber","alert","type","pattern","title","required","placeholder","onChange","target","value","List","ul","Item","li","ContactsList","filteredContacts","useEffect","map","params","onClick","changeFilter","createAction","Filter","App","createReducer","fulfilled","payload","pending","rejected","error","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3432f287.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3001\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 1400px;\n  min-height: 100vh;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: grey;\n`;\n\nexport const Title = styled.h1`\n  font-size: 36px;\n  font-weight: 700;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n\nexport const Undertitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600px;\n\n  margin: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  text-align: center;\n\n  padding: 20px;\n\n  border-bottom: 5px solid black;\n`;\n\nexport const Label = styled.label`\n  font-size: 30px;\n  font-weight: 600;\n\n  display: flex;\n  justify-content: ${(props) => (props.filter ? \"center\" : \"space-between\")};\n  align-items: ${(props) => (props.filter ? \"center\" : \"baseline\")};\n\n  flex-direction: ${(props) => (props.filter ? \"column\" : \"row\")};\n\n  transition-duration: 500ms;\n\n  cursor: pointer;\n\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 300px;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  outline: none;\n\n  border: none;\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  padding-left: 10px;\n  margin-left: 20px;\n\n  &:hover,\n  &:focus {\n    color: orange;\n    border: 2px solid orange;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 20px;\n  font-weight: 500;\n\n  width: 150px;\n  height: 30px;\n\n  border-radius: 10px;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    background-color: orange;\n  }\n`;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact) => {\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      return data;\n    } catch (error) {\n      console.log(\"Error on contacts/addContact\" + error.message);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async ({ id, contacts }, { rejectWithValue }) => {\n    try {\n      await axios.delete(\"/contacts/\" + id);\n      return contacts.filter((item) => item.id !== id);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// export const dispatchFetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     const contacts = await fetchContacts();\n\n//     dispatch(fetchContactsSuccess(contacts));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error.message));\n//   }\n// };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getIsLoading = (state) => state.contacts.isLoading;\nexport const getError = (state) => state.contacts.error;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n);\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Input, Label, Button, Form } from \"./ContactForm.styled\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const id = uuidv4();\n    const contact = { id, name, number };\n    const notUniqueName = contacts.some((item) => item.name === name);\n    const notUniqueNumber = contacts.some((item) => item.number === number);\n\n    if (notUniqueName) {\n      return alert(name + \" уже добавлен(а) в список контактов\");\n    } else if (notUniqueNumber) {\n      return alert(\"Уже добавлен контакт с номером: \" + number);\n    } else if (name === \"\" || number === \"\") {\n      return alert(\"Пожалуйста, введите Имя и номер.\");\n    } else {\n      dispatch(addContact(contact));\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Имя:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Введите имя\"\n          onChange={(evt) => {\n            setName(evt.target.value);\n          }}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Номер:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Введите номер телефона\"\n          onChange={(evt) => {\n            setNumber(evt.target.value);\n          }}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\">Подтвердить</Button>\n    </Form>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n\n  width: 1000px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  margin: 0px;\n  margin-top: 20px;\n  padding: 0px;\n`;\n\nexport const Item = styled.li`\n  font-size: 26px;\n  font-weight: 600;\n\n  width: 400px;\n  height: 50px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  border: 1px solid black;\n\n  background-color: #4b4b4b;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n  padding: 5px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: 1px solid black;\n  border-radius: 50%;\n\n  padding: 5px;\n\n  background-color: #4b4b4b;\n\n  cursor: pointer;\n\n  transition-duration: 500ms;\n\n  &:hover,\n  &:focus {\n    border: 1px solid orange;\n    transform: rotate(360deg) scale(1.15);\n\n    svg {\n      fill: orange;\n    }\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n\n    transition-duration: 500ms;\n  }\n`;\n","import { FaRegTrashAlt } from \"react-icons/fa\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchContacts,\n  deleteContact,\n} from \"../../redux/contacts/contacts-operations\";\nimport { List, Item, Button } from \"./ContaxList.styled\";\nimport {\n  getFilter,\n  getIsLoading,\n  getFilteredContacts,\n  getContacts,\n} from \"../../redux/contacts/contacts-selectors\";\n\nexport default function ContactsList() {\n  const state = useSelector((state) => state);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const contacts = useSelector(getContacts);\n  const filteredContacts = getFilteredContacts(state, filter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!isLoading ? (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => {\n            const params = {\n              id,\n              contacts,\n            };\n\n            return (\n              <Item key={id}>\n                {name}: {number}\n                <Button\n                  id={id}\n                  onClick={(evt) => {\n                    dispatch(deleteContact(params));\n                  }}\n                >\n                  <FaRegTrashAlt />\n                </Button>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <div>...Loading</div>\n      )}\n    </>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// export const fetchContactsRequest = createAction(\n//   \"contacts/fetchContactsRequest\"\n// );\n// export const fetchContactsSuccess = createAction(\n//   \"contacts/fetchContactsSuccess\"\n// );\n// export const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Label } from \"../contactForm/ContactForm.styled\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\n\nexport default function Filter() {\n  const state = useSelector((state) => state);\n  const filter = getFilter(state);\n  const dispatch = useDispatch();\n\n  return (\n    <Label filter=\"true\">\n      Введите имя для поиска в списке контактов\n      <Input\n        name=\"filter\"\n        onChange={(evt) => {\n          dispatch(changeFilter(evt.target.value));\n        }}\n        value={filter}\n      />\n    </Label>\n  );\n}\n","import \"./App.module.css\";\nimport { Wrapper, Title } from \"./components/General.styled\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactsList from \"./components/contactsList/ContactsList\";\nimport Filter from \"./components/filter/Filter\";\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Title>Телефонная книга:</Title>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </Wrapper>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./contacts-actions\";\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from \"./contacts-operations\";\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (_, { payload }) => [...payload],\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reducers\";\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./API/axios-default-options\";\nimport App from \"./App\";\nimport { store } from \"./redux/store.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}